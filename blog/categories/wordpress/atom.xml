<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: wordpress | klwang's TechNotes]]></title>
  <link href="http://blog.klwang.info/blog/categories/wordpress/atom.xml" rel="self"/>
  <link href="http://blog.klwang.info/"/>
  <updated>2013-06-23T09:22:55+08:00</updated>
  <id>http://blog.klwang.info/</id>
  <author>
    <name><![CDATA[wklxd]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[让 wordpress 支持手机访问]]></title>
    <link href="http://blog.klwang.info/wordpress-enable-mobile-access/"/>
    <updated>2013-06-08T00:00:00+08:00</updated>
    <id>http://blog.klwang.info/wordpress-enable-mobile-access</id>
    <content type="html"><![CDATA[<p>一时兴起，用手机打开了 <a href="http://klwang.info" target="_blank">klwang.info</a>。竟然是无法访问，真是太让人遗憾了。</p>




<p>网上搜了一下，很多人都说使用要 wp-wap， 完了还要改变访问的地址为 <a href="http://klwang.info/?mobile=1" target="_blank">klwang.info/wap</a>， 为了还看，还要另外设置一个域名解析。</p>




<p>我就在想了，既然有了新的访问地址，那可不可以在index.php中加一些代码，判断访问的来源，如果是手机访问，就重定向到 <a href="http://klwang.info/?mobile=1" target="_blank">klwang.info/wap</a> 好了，这样还免得设置解析，最重要的是访问者可以不用输入专门的手机版域名。</p>




<p>接着找了PHP关于$_SERVER的所有变量，挑了一些 可能有用的变量，如</p>




<p><pre>
HTTP_USER_AGENT
VIA
</pre></p>




<p>关于 HTTP_USER_AGENT， 实在是比较强大，可以知道所有的访问来自什么设备，只要grep就行了，具体的设备和 HTTP_USER_AGENT 值的关系，可以参考这篇文档： Mobile Browser ID (User-Agent) Strings， 文章里列出了几乎世界上所有的移动设备HTTP_USER_AGENT信息，为了方便，还提供了下面这么一段代码，来获取这写 AGENT</p>




<p><p><pre>
// Marc Gray&rsquo;s PHP script (untested by us)
// use at your discretion
&lt;?php
$page = file_get_contents(&lsquo;1.html&rsquo;);
preg_match_all(&lsquo;/&lt;(p) class=&ldquo;g-c-[ns]&rdquo;[^>]<em>>(.</em>?)&lt;\/p>/s&rsquo;, $page, $m); </pre></p></p>

<p><p>$agents = array();<br />
foreach($m[2] as $agent) {<br />
  $split = explode(&ldquo;\n&rdquo;, trim($agent));<br />
  foreach($split as $item) {<br /></p>

<pre><code>$agents[] = trim($item);&lt;br /&gt;
</code></pre>

<p>  }<br />
}
// $agents now holds every user agent string, one per array index, trimmed<br />
foreach($agents as $agent) {<br />
 echo($agent.&ldquo;\n&rdquo;);<br />
}
?>
</p></p>

<p><p>代码里边说他们没有测试过，我可以告诉大家，我测试了，确实可以用，但是结果确实很多， 一共 477 行， 下面是其中的几行，写在这里让大家看看 HTTP_USER_AGENT 到底长啥样</p></p>

<p><p><pre>
Mobile/9B206 Safari/7534.48.3
Mozilla/5.0 (iPhone; CPU iPhone OS 5_1 like Mac OS X)
AppleWebKit/534.46 (KHTML, like Gecko) Version/5.1 Mobile/9B176
Safari/7534.48.3
Mozilla/5.0 (iPhone; CPU iPhone OS 5_0_1 like Mac OS X)
AppleWebKit/534.46 (KHTML, like Gecko) Version/5.1 Mobile/9A405
Safari/7534.48.3</pre></p></p>

<p><p>这里是大量的省略号</p></p>

<p><p>Mozilla/5.0 (iPhone; CPU iPhone OS 5_0_1 like Mac OS X)<br />
AppleWebKit/534.46 (KHTML, like Gecko) Version/5.1 Mobile/9A405<br />
Safari/7534.48.3<br />
Mozilla/5.0 (iPod; U; CPU iPhone OS 4_3_3 like Mac OS<br />
X; en-us) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2
</p></p>

<p><p>有了所有的移动设备，就好办了，只要在 HTTP_USER_AGENT 中找这些东东就ok了，只要找到一个，就 Location 到 <a href="http://klwang.info/?mobile=1" target="_blank">klwang.info/wap</a>。<br />
上边的代码改成这样就行了</p></p>

<p><p><pre>
// $agents now holds every user agent string, one per array index, trimmed
foreach($agents as $agent) {
 if($agent == $_SERVER[&lsquo;HTTP_USER_AGENT&rsquo;]){</p>

<pre><code>header("Location: http://klwang.info/wap");
</code></pre>

<p>}
</pre></p></p>

<p><p>好了，思路有了，也知道怎么搞了，可以动手了， 打开 wordpress，搜索 wap-wp</p></p>

<p><p><a href="http://klwang.info/blog/wp-content/uploads/2013/06/wap-wp-search.png"><img src="http://klwang.info/blog/wp-content/uploads/2013/06/wap-wp-search-300x229.png" alt="wap-wp-search" width="300" height="229" /></a></p></p>

<p><p>咦？ 这个 Wireless-Wordpress 是啥？ 看了介绍，突然发现我半天的思考白费了，竟然有人已经把我想的事情全做好了，而且还做的更好。</p></p>

<p><p>好吧，就直接用人家的插件吧，照着引导设置，也很简单，就不废话了</p></p>

<p><p>这下玩大了， 上面说了一大堆，都暴露除了 <a href="http://klwang.info/?mobile=1" target="_blank">klwang.info/wap </a>这个地址，最后竟然不搞了，这怎么能行呢？</p></p>

<p><p>嘿嘿，这是难不倒咱们的</p></p>

<p><p>在根目录下创建一个 wap/index.php， 里边就一句话</p></p>

<p><p><pre>
cat >>wap/index.php&lt;&lt;EOF
&lt;?php</p>

<pre><code>header("Location: http://klwang.info/?mobile=1");
</code></pre>

<p>?>
EOF
</pre></p></p>

<p><p>这样，用户就可以正常访问 <a href="http://klwang.info/?mobile=1" target="_blank">klwang.info/wap</a> 啦<br />
总算前面说了那么多没有骗人，也不用收回那么多的废话（打字都打了好久呢）</p></p>

<p><p>无图无真相，上两张截图，看看<a href="http://klwang.info/?mobile=1" target="_blank">klwang.info</a>在手机中长得啥样</p></p>

<p><p><a href="http://klwang.info/blog/wp-content/uploads/2013/06/wap-klwang-index.png"><img src="http://klwang.info/blog/wp-content/uploads/2013/06/wap-klwang-index.png" alt="wap-klwang-index" width="300" /></a>
主页效果图</p></p>

<p><p><a href="http://klwang.info/blog/wp-content/uploads/2013/06/wap-klwang-wordpress-mobile.png"><img src="http://klwang.info/blog/wp-content/uploads/2013/06/wap-klwang-wordpress-mobile.png" alt="wap-klwang-wordpress-mobile" width="300" /></a>
本文效果图</p></p>

<p><p>总结：</p></p>

<p><p><strong>正式动手前，一定要多观察，说不定别人已经做了你要做的事情了呢</strong>
</p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[将wordpress博客站点移动到子目录]]></title>
    <link href="http://blog.klwang.info/move-my-wordpress-to-a-subdir/"/>
    <updated>2013-05-19T00:00:00+08:00</updated>
    <id>http://blog.klwang.info/move-my-wordpress-to-a-subdir</id>
    <content type="html"><![CDATA[<p>之前为了简单，建立博客时使用了wordpress的默认选项，一路回车；</p>




<p>今天心血来潮，想要安装新的功能，才发现网站的目录结构已经惨不忍睹了，索性就将wp移动到了子目录</p>




<p>1. 修改 WordPress 地址（URL） (设置-> 常规)
<pre>       http://klwang.info/abcd     --这里假设站点的子目录是abcd</pre>
2. 将所有的wp文件全部移动到bacd目录</p>




<p>3. 将原来的index.php和.<tt>.htaccess</tt>文件复制到根目录<br />
    注意：这里是<strong>复制</strong>
    想知道直接移动是啥效果吗，可以试试，会发现自己的博客赤裸裸的暴露在了攻击之下</p>




<p>4. 用文本编辑器打开根目录中的 index.php, 原文
<pre>       require('./wp-blog-header.php');</pre>
修改成
<pre>       require('./abcd/wp-blog-header.php');</pre></p>




<p>5.更新固定链接 (设置->固定链接)<br />
直接保存即可 (这一步很重要，不然，你会发现之前的文章都不能访问了)</p>




<p>参考文章:  <a href="http://codex.wordpress.org/Giving_WordPress_Its_Own_Directory">Giving WordPress Its Own Directory</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[修改wordpress的登陆地址]]></title>
    <link href="http://blog.klwang.info/change-default-wordpress-login-address/"/>
    <updated>2013-05-19T00:00:00+08:00</updated>
    <id>http://blog.klwang.info/change-default-wordpress-login-address</id>
    <content type="html"><![CDATA[<p>考虑到blog的安全性，决定改一下登陆界面，百度了好久，做了好多无用功，还是没有成功；</p>




<p>在plugin搜索里边找了着，找到了一个比较简单的东东，分享一下；</p>




<p><strong>Stealth Login Page</strong> 设置起来也很简单，如下，只要输入问题和密码，就ok了</p>




<p><a href="http://klwang.info/blog/wp-content/uploads/2013/05/login-change.png"><img alt="login-change" src="http://klwang.info/blog/wp-content/uploads/2013/05/login-change.png" width="500" /></a></p>




<p><strong>Stealth Login Page </strong>会自动生成新的登陆页面，使用新的页面登陆就好了</p>




<p>good luck！</p>

]]></content>
  </entry>
  
</feed>
